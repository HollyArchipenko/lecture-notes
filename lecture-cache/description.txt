Полулярность лекции определяется количеством лайков.
Кэшируется 100 наиболее популярных лекций (топ-100).

После выполнения части storm данные о топ-е 100 заносятся в кэш. И хранятся там до следующего выполнения storm.
Данные о топ-е храним в Redis в виде хэш-таблицы. Ключ: lectionId, значение: imageCatalog (каталог фотографий конспекта).

Ревалидация:
происходит при изменении топ-100. 
Ввиду относительно частой ревалидации необходимости в expiration-cache нет, 
все данные хранятся по умолчанию (вечно).

json запросы
1) подгрузить новые лекции GET
2) удалить выбывшие из топ-а DELETE     или PUT к 1, 2

GET lectureId:name
при поступлении данного запроса с клиента,
обращаемся к кешу и если есть соответствующий name,
подгружаем данные из кеша в json, который отдаем на клиент. 
Если же запрошенная лекция не находится в топе-100, то обращаемся к БД.

Примеры кода: 
1) Вставка
hset lectures: lectureId imageCatalog 1.jpg // при ревалидации кеша
2) Запрос
hget lectures: lectureId // при GET-запросе при наличии соответствующей лекции
3) Удаление
hdel lectures: lectureId // при ревалидации кеша
